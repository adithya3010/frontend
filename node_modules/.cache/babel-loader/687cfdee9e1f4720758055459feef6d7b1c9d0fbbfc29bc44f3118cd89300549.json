{"ast":null,"code":"var _jsxFileName = \"C:\\\\mern-leaflet-project\\\\frontend\\\\src\\\\pages\\\\LocationPage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport StatusSummary from '../components/StatusSummary';\nimport GoogleMap from '../components/GoogleMap';\nimport ChargerList from '../components/ChargerList';\nimport AddChargerForm from '../components/AddChargerForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LocationPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [location, setLocation] = useState(null);\n  const [chargers, setChargers] = useState([]);\n  const [statusCounts, setStatusCounts] = useState({\n    available: 0,\n    'plugged in': 0,\n    faulty: 0\n  });\n  useEffect(() => {\n    const fetchLocation = async () => {\n      try {\n        const res = await axios.get(`/api/locations/${id}`);\n        setLocation(res.data.location);\n        setChargers(res.data.chargers);\n      } catch (err) {\n        console.error('Failed to fetch location', err);\n      }\n    };\n    fetchLocation();\n  }, [id]);\n  useEffect(() => {\n    const counts = {\n      available: 0,\n      'plugged in': 0,\n      faulty: 0\n    };\n    chargers.forEach(charger => {\n      const status = charger.status.toLowerCase();\n      if (counts.hasOwnProperty(status)) {\n        counts[status]++;\n      }\n    });\n    setStatusCounts(counts);\n  }, [chargers]);\n  if (!location) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: location.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatusSummary, {\n      statusCounts: statusCounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n      latitude: location.latitude,\n      longitude: location.longitude\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Chargers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChargerList, {\n      chargers: chargers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddChargerForm, {\n      locationId: id\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(LocationPage, \"YJ/VdLhUBwEHDs5hDTwY2IPtAkw=\", false, function () {\n  return [useParams];\n});\n_c = LocationPage;\nvar _c;\n$RefreshReg$(_c, \"LocationPage\");","map":{"version":3,"names":["useEffect","useState","useParams","axios","StatusSummary","GoogleMap","ChargerList","AddChargerForm","jsxDEV","_jsxDEV","LocationPage","_s","id","location","setLocation","chargers","setChargers","statusCounts","setStatusCounts","available","faulty","fetchLocation","res","get","data","err","console","error","counts","forEach","charger","status","toLowerCase","hasOwnProperty","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","fontFamily","name","latitude","longitude","locationId","_c","$RefreshReg$"],"sources":["C:/mern-leaflet-project/frontend/src/pages/LocationPage.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport StatusSummary from '../components/StatusSummary';\r\nimport GoogleMap from '../components/GoogleMap';\r\nimport ChargerList from '../components/ChargerList';\r\nimport AddChargerForm from '../components/AddChargerForm';\r\n\r\nexport default function LocationPage() {\r\n  const { id } = useParams();\r\n  const [location, setLocation] = useState(null);\r\n  const [chargers, setChargers] = useState([]);\r\n  const [statusCounts, setStatusCounts] = useState({\r\n    available: 0,\r\n    'plugged in': 0,\r\n    faulty: 0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchLocation = async () => {\r\n      try {\r\n        const res = await axios.get(`/api/locations/${id}`);\r\n        setLocation(res.data.location);\r\n        setChargers(res.data.chargers);\r\n      } catch (err) {\r\n        console.error('Failed to fetch location', err);\r\n      }\r\n    };\r\n    fetchLocation();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    const counts = {\r\n      available: 0,\r\n      'plugged in': 0,\r\n      faulty: 0,\r\n    };\r\n\r\n    chargers.forEach((charger) => {\r\n      const status = charger.status.toLowerCase();\r\n      if (counts.hasOwnProperty(status)) {\r\n        counts[status]++;\r\n      }\r\n    });\r\n\r\n    setStatusCounts(counts);\r\n  }, [chargers]);\r\n\r\n  if (!location) return <div>Loading...</div>;\r\n\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'Arial' }}>\r\n      <h1>{location.name}</h1>\r\n\r\n      <StatusSummary statusCounts={statusCounts} />\r\n      <GoogleMap latitude={location.latitude} longitude={location.longitude} />\r\n\r\n      <h2>Available Chargers</h2>\r\n      <ChargerList chargers={chargers} />\r\n\r\n      <AddChargerForm locationId={id} />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}