{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\adith\\\\Downloads\\\\mern-leaflet-project\\\\frontend\\\\src\\\\components\\\\MapComponent.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nimport L from 'leaflet';\nimport * as turf from '@turf/turf';\nimport polyline from '@mapbox/polyline';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst greenIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\nconst blueDotIcon = new L.DivIcon({\n  html: '<div style=\"width: 16px; height: 16px; background: rgba(0,123,255,0.7); border-radius: 50%; box-shadow: 0 0 12px rgba(0,123,255,0.5);\"></div>',\n  className: ''\n});\nconst MapComponent = () => {\n  _s();\n  const [locations, setLocations] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n  const [sortedLocations, setSortedLocations] = useState([]);\n  const [showList, setShowList] = useState(false);\n  const [start, setStart] = useState(null);\n  const [end, setEnd] = useState(null);\n  const [routePoints, setRoutePoints] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n  const getDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371;\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a = Math.sin(dLat / 2) ** 2 + Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) * Math.sin(dLon / 2) ** 2;\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  };\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/locations').then(res => setLocations(res.data));\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setUserLocation({\n          lat: latitude,\n          lng: longitude\n        });\n\n        // Init Google Autocomplete\n        const initAutocomplete = (id, setter) => {\n          const input = document.getElementById(id);\n          const autocomplete = new window.google.maps.places.Autocomplete(input);\n          autocomplete.addListener('place_changed', () => {\n            const place = autocomplete.getPlace();\n            if (place.geometry) {\n              setter({\n                lat: place.geometry.location.lat(),\n                lng: place.geometry.location.lng(),\n                name: place.formatted_address\n              });\n            }\n          });\n        };\n        initAutocomplete('start', setStart);\n        initAutocomplete('end', setEnd);\n\n        // Update distances in backend\n        fetch('http://localhost:5000/update-distances', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            userLat: latitude,\n            userLng: longitude\n          })\n        }).then(res => res.json()).then(data => console.log(\"✅ Distances updated\", data)).catch(err => console.error(\"❌ Failed to update distances:\", err));\n      });\n    }\n  }, []);\n  const findNearest = () => {\n    if (!userLocation || locations.length === 0) return;\n    const level = parseInt(prompt(\"Enter your current battery percentage:\"), 10);\n    if (isNaN(level) || level < 0 || level > 100) {\n      alert(\"Please enter a valid percentage between 0 and 100.\");\n      return;\n    }\n    const updated = locations.map(loc => {\n      const actualDist = getDistance(userLocation.lat, userLocation.lng, Number(loc.latitude), Number(loc.longitude));\n      const isRenewable = loc.sourceType === 'renewable';\n      const adjustedDist = isRenewable ? Math.max(actualDist - 5, 0) : actualDist;\n      return {\n        ...loc,\n        actualDistance: actualDist,\n        adjustedDistance: adjustedDist\n      };\n    });\n    if (level > 20) {\n      updated.sort((a, b) => a.adjustedDistance - b.adjustedDistance);\n    } else {\n      updated.sort((a, b) => a.actualDistance - b.actualDistance);\n    }\n    setSortedLocations(updated);\n    setShowList(true);\n  };\n  const handleRoute = async () => {\n    if (!start || !end) return;\n    const apiKey = process.env.REACT_APP_GOOGLE_API_KEY || 'YOUR_API_KEY_HERE';\n    const url = `https://maps.googleapis.com/maps/api/directions/json?origin=${start.lat},${start.lng}&destination=${end.lat},${end.lng}&key=${apiKey}`;\n    try {\n      const res = await axios.get(url);\n      const encoded = res.data.routes[0].overview_polyline.points;\n      const path = polyline.decode(encoded).map(([lat, lng]) => ({\n        lat,\n        lng\n      }));\n      setRoutePoints(path);\n\n      // Filter DB locations within 5km of route\n      const line = turf.lineString(path.map(p => [p.lng, p.lat]));\n      const nearby = locations.filter(loc => {\n        const pt = turf.point([loc.longitude, loc.latitude]);\n        const dist = turf.pointToLineDistance(pt, line, {\n          units: 'kilometers'\n        });\n        return dist <= 5;\n      });\n      setFiltered(nearby);\n    } catch (err) {\n      console.error('Directions API error:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: findNearest,\n      style: {\n        margin: '10px',\n        padding: '10px 20px',\n        fontWeight: 'bold'\n      },\n      children: \"Find Nearest\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"start\",\n        placeholder: \"Start location\",\n        style: {\n          marginRight: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"end\",\n        placeholder: \"End location\",\n        style: {\n          marginRight: 10\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRoute,\n        children: \"Show Route with Nearby Stations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [20.5937, 78.9629],\n      zoom: 5,\n      style: {\n        height: \"600px\",\n        width: \"100%\",\n        maxWidth: \"800px\",\n        margin: \"0 auto\",\n        border: \"2px solid #ccc\",\n        borderRadius: \"8px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), routePoints.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n        positions: routePoints.map(p => [p.lat, p.lng]),\n        color: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this), filtered.map(loc => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [loc.latitude, loc.longitude],\n        icon: greenIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: loc.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 32\n          }, this), loc.sourceType, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `http://localhost:5000/${loc._id}`,\n            target: \"_blank\",\n            children: \"View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this)\n      }, loc._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }, this)), locations.map(loc => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [loc.latitude, loc.longitude],\n        icon: greenIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: loc.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 42\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: `http://localhost:5000/${loc._id}`,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: \"View more details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this)\n      }, loc._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this)), userLocation && /*#__PURE__*/_jsxDEV(Marker, {\n        position: [userLocation.lat, userLocation.lng],\n        icon: blueDotIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: \"Your Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), showList && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        height: '100vh',\n        width: '100vw',\n        backgroundColor: 'rgba(0,0,0,0.5)',\n        zIndex: 1000,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          backgroundColor: 'white',\n          padding: '20px',\n          borderRadius: '10px',\n          width: '80%',\n          maxWidth: '500px',\n          maxHeight: '80vh',\n          overflowY: 'auto',\n          boxShadow: '0 4px 20px rgba(0,0,0,0.3)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Nearest Charging Stations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          style: {\n            listStyle: 'none',\n            padding: 0\n          },\n          children: sortedLocations.slice(0, 10).map((loc, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            style: {\n              marginBottom: '15px',\n              borderBottom: '1px solid #ddd',\n              paddingBottom: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [index + 1, \". \", loc.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 59\n            }, this), \"Source: \", loc.sourceType, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 43\n            }, this), \"Distance: \", loc.actualDistance.toFixed(2), \" km\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 63\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              method: \"GET\",\n              action: `http://localhost:5000/${loc._id}`,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                style: {\n                  marginTop: '5px'\n                },\n                children: \"View Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 19\n            }, this)]\n          }, loc._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowList(false),\n          style: {\n            marginTop: '20px',\n            padding: '8px 12px',\n            backgroundColor: '#dc3545',\n            color: 'white',\n            border: 'none',\n            borderRadius: '6px',\n            cursor: 'pointer'\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(MapComponent, \"PLBLsRbnj1ZVDiiYnqD2QXRMhmQ=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","useEffect","MapContainer","TileLayer","Marker","Popup","Polyline","axios","L","turf","polyline","jsxDEV","_jsxDEV","Fragment","_Fragment","greenIcon","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","blueDotIcon","DivIcon","html","className","MapComponent","_s","locations","setLocations","userLocation","setUserLocation","sortedLocations","setSortedLocations","showList","setShowList","start","setStart","end","setEnd","routePoints","setRoutePoints","filtered","setFiltered","getDistance","lat1","lon1","lat2","lon2","R","dLat","Math","PI","dLon","a","sin","cos","c","atan2","sqrt","get","then","res","data","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","lat","lng","initAutocomplete","id","setter","input","document","getElementById","autocomplete","window","google","maps","places","Autocomplete","addListener","place","getPlace","geometry","location","name","formatted_address","fetch","method","headers","body","JSON","stringify","userLat","userLng","json","console","log","catch","err","error","findNearest","length","level","parseInt","prompt","isNaN","alert","updated","map","loc","actualDist","Number","isRenewable","sourceType","adjustedDist","max","actualDistance","adjustedDistance","sort","b","handleRoute","apiKey","process","env","REACT_APP_GOOGLE_API_KEY","url","encoded","routes","overview_polyline","points","path","decode","line","lineString","p","nearby","filter","pt","point","dist","pointToLineDistance","units","children","onClick","style","margin","padding","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","marginRight","center","zoom","height","width","maxWidth","border","borderRadius","positions","color","icon","href","_id","target","rel","top","left","backgroundColor","zIndex","display","justifyContent","alignItems","maxHeight","overflowY","boxShadow","listStyle","slice","index","marginBottom","borderBottom","paddingBottom","toFixed","action","type","marginTop","cursor","_c","$RefreshReg$"],"sources":["C:/Users/adith/Downloads/mern-leaflet-project/frontend/src/components/MapComponent.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport axios from 'axios';\nimport L from 'leaflet';\nimport * as turf from '@turf/turf';\nimport polyline from '@mapbox/polyline';\n\nconst greenIcon = new L.Icon({\n  iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-green.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\nconst blueDotIcon = new L.DivIcon({\n  html: '<div style=\"width: 16px; height: 16px; background: rgba(0,123,255,0.7); border-radius: 50%; box-shadow: 0 0 12px rgba(0,123,255,0.5);\"></div>',\n  className: ''\n});\n\nconst MapComponent = () => {\n  const [locations, setLocations] = useState([]);\n  const [userLocation, setUserLocation] = useState(null);\n  const [sortedLocations, setSortedLocations] = useState([]);\n  const [showList, setShowList] = useState(false);\n  const [start, setStart] = useState(null);\n  const [end, setEnd] = useState(null);\n  const [routePoints, setRoutePoints] = useState([]);\n  const [filtered, setFiltered] = useState([]);\n\n  const getDistance = (lat1, lon1, lat2, lon2) => {\n    const R = 6371;\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLon = (lon2 - lon1) * Math.PI / 180;\n    const a =\n      Math.sin(dLat / 2) ** 2 +\n      Math.cos(lat1 * Math.PI / 180) *\n      Math.cos(lat2 * Math.PI / 180) *\n      Math.sin(dLon / 2) ** 2;\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return R * c;\n  };\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/api/locations')\n      .then((res) => setLocations(res.data));\n\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        const { latitude, longitude } = position.coords;\n        setUserLocation({ lat: latitude, lng: longitude });\n\n        // Init Google Autocomplete\n        const initAutocomplete = (id, setter) => {\n          const input = document.getElementById(id);\n          const autocomplete = new window.google.maps.places.Autocomplete(input);\n          autocomplete.addListener('place_changed', () => {\n            const place = autocomplete.getPlace();\n            if (place.geometry) {\n              setter({\n                lat: place.geometry.location.lat(),\n                lng: place.geometry.location.lng(),\n                name: place.formatted_address\n              });\n            }\n          });\n        };\n        initAutocomplete('start', setStart);\n        initAutocomplete('end', setEnd);\n\n        // Update distances in backend\n        fetch('http://localhost:5000/update-distances', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ userLat: latitude, userLng: longitude })\n        })\n          .then(res => res.json())\n          .then(data => console.log(\"✅ Distances updated\", data))\n          .catch(err => console.error(\"❌ Failed to update distances:\", err));\n      });\n    }\n  }, []);\n\n  const findNearest = () => {\n    if (!userLocation || locations.length === 0) return;\n\n    const level = parseInt(prompt(\"Enter your current battery percentage:\"), 10);\n    if (isNaN(level) || level < 0 || level > 100) {\n      alert(\"Please enter a valid percentage between 0 and 100.\");\n      return;\n    }\n\n    const updated = locations.map((loc) => {\n      const actualDist = getDistance(\n        userLocation.lat,\n        userLocation.lng,\n        Number(loc.latitude),\n        Number(loc.longitude)\n      );\n      const isRenewable = loc.sourceType === 'renewable';\n      const adjustedDist = isRenewable ? Math.max(actualDist - 5, 0) : actualDist;\n      return {\n        ...loc,\n        actualDistance: actualDist,\n        adjustedDistance: adjustedDist\n      };\n    });\n\n    if (level > 20) {\n      updated.sort((a, b) => a.adjustedDistance - b.adjustedDistance);\n    } else {\n      updated.sort((a, b) => a.actualDistance - b.actualDistance);\n    }\n\n    setSortedLocations(updated);\n    setShowList(true);\n  };\n\n  const handleRoute = async () => {\n    if (!start || !end) return;\n\n    const apiKey = process.env.REACT_APP_GOOGLE_API_KEY || 'YOUR_API_KEY_HERE';\n    const url = `https://maps.googleapis.com/maps/api/directions/json?origin=${start.lat},${start.lng}&destination=${end.lat},${end.lng}&key=${apiKey}`;\n\n    try {\n      const res = await axios.get(url);\n      const encoded = res.data.routes[0].overview_polyline.points;\n      const path = polyline.decode(encoded).map(([lat, lng]) => ({ lat, lng }));\n      setRoutePoints(path);\n\n      // Filter DB locations within 5km of route\n      const line = turf.lineString(path.map(p => [p.lng, p.lat]));\n      const nearby = locations.filter(loc => {\n        const pt = turf.point([loc.longitude, loc.latitude]);\n        const dist = turf.pointToLineDistance(pt, line, { units: 'kilometers' });\n        return dist <= 5;\n      });\n\n      setFiltered(nearby);\n    } catch (err) {\n      console.error('Directions API error:', err);\n    }\n  };\n\n  return (\n    <>\n      <button onClick={findNearest} style={{ margin: '10px', padding: '10px 20px', fontWeight: 'bold' }}>\n        Find Nearest\n      </button>\n\n      <div style={{ margin: '10px' }}>\n        <input id=\"start\" placeholder=\"Start location\" style={{ marginRight: 10 }} />\n        <input id=\"end\" placeholder=\"End location\" style={{ marginRight: 10 }} />\n        <button onClick={handleRoute}>Show Route with Nearby Stations</button>\n      </div>\n\n      <MapContainer\n        center={[20.5937, 78.9629]}\n        zoom={5}\n        style={{\n          height: \"600px\",\n          width: \"100%\",\n          maxWidth: \"800px\",\n          margin: \"0 auto\",\n          border: \"2px solid #ccc\",\n          borderRadius: \"8px\"\n        }}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        />\n\n        {routePoints.length > 0 && (\n          <Polyline positions={routePoints.map(p => [p.lat, p.lng])} color=\"blue\" />\n        )}\n\n        {filtered.map(loc => (\n          <Marker key={loc._id} position={[loc.latitude, loc.longitude]} icon={greenIcon}>\n            <Popup>\n              <b>{loc.name}</b><br />\n              {loc.sourceType}<br />\n              <a href={`http://localhost:5000/${loc._id}`} target=\"_blank\">View</a>\n            </Popup>\n          </Marker>\n        ))}\n\n        {locations.map(loc => (\n          <Marker key={loc._id} position={[loc.latitude, loc.longitude]} icon={greenIcon}>\n            <Popup>\n              <strong>{loc.name}</strong><br />\n              <a href={`http://localhost:5000/${loc._id}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                View more details\n              </a>\n            </Popup>\n          </Marker>\n        ))}\n\n        {userLocation && (\n          <Marker position={[userLocation.lat, userLocation.lng]} icon={blueDotIcon}>\n            <Popup>Your Location</Popup>\n          </Marker>\n        )}\n      </MapContainer>\n\n      {showList && (\n        <div style={{\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          height: '100vh',\n          width: '100vw',\n          backgroundColor: 'rgba(0,0,0,0.5)',\n          zIndex: 1000,\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}>\n          <div style={{\n            backgroundColor: 'white',\n            padding: '20px',\n            borderRadius: '10px',\n            width: '80%',\n            maxWidth: '500px',\n            maxHeight: '80vh',\n            overflowY: 'auto',\n            boxShadow: '0 4px 20px rgba(0,0,0,0.3)'\n          }}>\n            <h2>Nearest Charging Stations</h2>\n            <ul style={{ listStyle: 'none', padding: 0 }}>\n              {sortedLocations.slice(0, 10).map((loc, index) => (\n                <li key={loc._id} style={{ marginBottom: '15px', borderBottom: '1px solid #ddd', paddingBottom: '10px' }}>\n                  <strong>{index + 1}. {loc.name}</strong><br />\n                  Source: {loc.sourceType}<br />\n                  Distance: {loc.actualDistance.toFixed(2)} km<br />\n                  <form method=\"GET\" action={`http://localhost:5000/${loc._id}`}>\n                    <button type=\"submit\" style={{ marginTop: '5px' }}>View Details</button>\n                  </form>\n                </li>\n              ))}\n            </ul>\n\n            <button\n              onClick={() => setShowList(false)}\n              style={{\n                marginTop: '20px',\n                padding: '8px 12px',\n                backgroundColor: '#dc3545',\n                color: 'white',\n                border: 'none',\n                borderRadius: '6px',\n                cursor: 'pointer'\n              }}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}