{"ast":null,"code":"var _jsxFileName = \"C:\\\\mern-leaflet-project\\\\frontend\\\\src\\\\pages\\\\LocationPage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport GoogleMap from \"../components/GoogleMap\";\nimport ChargerList from \"../components/ChargerList\";\nimport StatusSummary from \"../components/StatusSummary\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LocationPage() {\n  _s();\n  const {\n    locationId\n  } = useParams();\n  const [location, setLocation] = useState(null);\n  const [chargers, setChargers] = useState([]);\n  useEffect(() => {\n    fetch(`/api/locations/${locationId}`).then(res => res.json()).then(data => {\n      setLocation(data.location);\n      setChargers(data.chargers);\n    });\n  }, [locationId]);\n  const handlePlugStatusChange = updatedCharger => {\n    setChargers(prevChargers => prevChargers.map(ch => ch._id === updatedCharger._id ? updatedCharger : ch));\n  };\n  const statusCounts = chargers.reduce((acc, charger) => {\n    var _charger$status;\n    const status = (_charger$status = charger.status) === null || _charger$status === void 0 ? void 0 : _charger$status.toLowerCase();\n    if (status === \"available\") acc.available++;else if (status === \"plugged in\") acc[\"plugged in\"]++;else if (status === \"faulty\") acc.faulty++;\n    return acc;\n  }, {\n    available: 0,\n    \"plugged in\": 0,\n    faulty: 0\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(StatusSummary, {\n      statusCounts: statusCounts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), location && /*#__PURE__*/_jsxDEV(GoogleMap, {\n      latitude: location.latitude,\n      longitude: location.longitude,\n      locationName: location.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Available Chargers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChargerList, {\n      chargers: chargers,\n      onStatusChange: handlePlugStatusChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(LocationPage, \"P5Hwk+FOfqgYJY6GcEzbQ3bxhqI=\", false, function () {\n  return [useParams];\n});\n_c = LocationPage;\nvar _c;\n$RefreshReg$(_c, \"LocationPage\");","map":{"version":3,"names":["useEffect","useState","useParams","GoogleMap","ChargerList","StatusSummary","jsxDEV","_jsxDEV","LocationPage","_s","locationId","location","setLocation","chargers","setChargers","fetch","then","res","json","data","handlePlugStatusChange","updatedCharger","prevChargers","map","ch","_id","statusCounts","reduce","acc","charger","_charger$status","status","toLowerCase","available","faulty","children","fileName","_jsxFileName","lineNumber","columnNumber","latitude","longitude","locationName","name","onStatusChange","_c","$RefreshReg$"],"sources":["C:/mern-leaflet-project/frontend/src/pages/LocationPage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport GoogleMap from \"../components/GoogleMap\";\r\nimport ChargerList from \"../components/ChargerList\";\r\nimport StatusSummary from \"../components/StatusSummary\";\r\n\r\nexport default function LocationPage() {\r\n  const { locationId } = useParams();\r\n  const [location, setLocation] = useState(null);\r\n  const [chargers, setChargers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(`/api/locations/${locationId}`)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setLocation(data.location);\r\n        setChargers(data.chargers);\r\n      });\r\n  }, [locationId]);\r\n\r\n  const handlePlugStatusChange = (updatedCharger) => {\r\n    setChargers((prevChargers) =>\r\n      prevChargers.map((ch) =>\r\n        ch._id === updatedCharger._id ? updatedCharger : ch\r\n      )\r\n    );\r\n  };\r\n\r\n  const statusCounts = chargers.reduce(\r\n    (acc, charger) => {\r\n      const status = charger.status?.toLowerCase();\r\n      if (status === \"available\") acc.available++;\r\n      else if (status === \"plugged in\") acc[\"plugged in\"]++;\r\n      else if (status === \"faulty\") acc.faulty++;\r\n      return acc;\r\n    },\r\n    { available: 0, \"plugged in\": 0, faulty: 0 }\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      {/* ðŸ‘‡ Status Summary at Top */}\r\n      <StatusSummary statusCounts={statusCounts} />\r\n\r\n      {location && (\r\n        <GoogleMap\r\n          latitude={location.latitude}\r\n          longitude={location.longitude}\r\n          locationName={location.name}\r\n        />\r\n      )}\r\n\r\n      <h3>Available Chargers</h3>\r\n      {/* ðŸ‘‡ Real-time updating Charger list */}\r\n      <ChargerList\r\n        chargers={chargers}\r\n        onStatusChange={handlePlugStatusChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}